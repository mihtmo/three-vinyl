[{"/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/index.js":"1","/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/App.js":"2","/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/components/Room.js":"3","/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/components/Weatherblanket.js":"4","/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/components/Mote.js":"5","/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/components/RecordJacket.js":"6","/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/components/Vinyl.js":"7","/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/data/colorscale.js":"8"},{"size":212,"mtime":1656807039300,"results":"9","hashOfConfig":"10"},{"size":3542,"mtime":1656879870345,"results":"11","hashOfConfig":"10"},{"size":1909,"mtime":1656878782366,"results":"12","hashOfConfig":"10"},{"size":5221,"mtime":1656879936037,"results":"13","hashOfConfig":"10"},{"size":965,"mtime":1655573702129,"results":"14","hashOfConfig":"10"},{"size":3915,"mtime":1655664998242,"results":"15","hashOfConfig":"10"},{"size":3143,"mtime":1655664999536,"results":"16","hashOfConfig":"10"},{"size":1028,"mtime":1655588111846,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ab8onj",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/index.js",[],[],"/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/App.js",["45","46","47","48","49"],[],"import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport {RecordJacket } from './components/RecordJacket';\nimport Vinyl from './components/Vinyl'\nimport { Controls } from 'react-three-gui'\nimport { PointerLockControls, FirstPersonControls, FlyControls, OrbitControls } from '@react-three/drei';\nimport Room from './components/Room';\nimport { Mote, RandomMote } from './components/Mote';\nimport Weatherblanket from './components/Weatherblanket';\nimport axios from 'axios';\n\n\n\nconst App = () => {\n\n    const [xSpaceValue, setXSpaceValue] = useState(1)\n    const [isLoading, setLoading] = useState(true);\n    const [weatherData, setWeatherData] = useState()\n\n    const xSpaceHandler = e => {\n        setXSpaceValue(e.target.value)\n    }\n\n    useEffect(() => {\n            axios({\n                method: \"GET\",\n                url: \"/api\"\n            })\n            .then((response) => {\n                const res = response.data\n                setWeatherData(res)\n                setLoading(false);\n            }).catch((error) => {\n                if (error.response) {\n                    console.log(error.response)\n                    console.log(error.response.status)\n                    console.log(error.response.headers)\n                }\n            })}, []);\n\n    if (isLoading) {\n        return <div className=\"App\">Loading...</div>;\n    }\n\n    return (\n        <Controls.Provider>\n            <div className=\"record-canvas\">\n                <Controls.Canvas className=\"webgl-canvas\" \n                    camera={{ fov: 75, position: [0, 200, 1000], near: 1, far: 8000 }}\n                    shadows={{ type: \"BasicShadowMap\" }}>\n                    <color attach=\"background\" args={[\"#565665\"]} />\n                    <fog attach=\"fog\" args={[\"#565665\", 1800, 3000]} />\n                    <OrbitControls lookSpeed={0.1} movementSpeed={1000} target={[0, 200, 0]} s/>\n                    <ambientLight color={\"lightyellow\"} intensity={.3}/>\n                    <directionalLight castShadow={true} position={[-500, 2000, -2000]} color={\"lightyellow\"} intensity={.8}/>\n                    <pointLight castShadow={true} position={[300, 100, 500]} color={\"lightyellow\"} intensity={.8}/>\n                    <pointLight castShadow={true} position={[-200, 100, 500]} color={\"lightyellow\"} intensity={.8}/>\n                    <pointLight castShadow={true} position={[-300, 100, -500]} color={\"lightyellow\"} intensity={.2}/>\n                    <Room />\n                    <Vinyl />\n                    <RecordJacket />\n                    {/* <RandomMote /> */}\n                    <Weatherblanket weatherData={weatherData} xSpace={xSpaceValue}/>\n                </Controls.Canvas>\n                <div className=\"myGUI\">\n                    <div id=\"x-space-slider\" >\n                        <label className=\"flex-item\" htmlFor=\"x-space\">Horizontal Spacing</label>\n                        <input className=\"flex-item\" type=\"range\" min=\"1\" max=\"5\" step=\".05\" id=\"x-space\" value={xSpaceValue} onChange={xSpaceHandler} />\n                        <label className=\"flex-item\" htmlFor=\"x-space\"> {xSpaceValue} </label>\n                    </div>\n                </div>\n                <Controls title=\"Controls\" defaultClosedGroups={[\"Vinyl\", \"Jacket\", \"Weatherblanket\"]}/>\n            </div>\n        </Controls.Provider>\n    );\n};\nexport default App;\n\n// // \"12 Inch Vinyl Record EP\" (https://skfb.ly/6Z8zV) by finnddot is licensed under Creative Commons Attribution (http://creativecommons.org/licenses/by/4.0/)\"\n\n\n","/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/components/Room.js",["50"],[],"import { useRef } from 'react';\nimport * as THREE from 'three';\nimport { useLoader } from '@react-three/fiber';\n\n\nconst WoodFloor = (props) => {\n    const mesh = useRef();\n    const [mapColor, mapAO, mapReflect, mapBump] = useLoader(THREE.TextureLoader, \n        ['./assets/woodfloor/woodfloor-color.jpg', './assets/woodfloor/woodfloor-ambient.jpg','./assets/woodfloor/woodfloor-gloss.jpg', './assets/woodfloor/woodfloor-bump.jpg'])\n    \n    const textureArray = [mapColor, mapAO, mapReflect, mapBump]\n\n    for (let i=0; i<4; i++) {\n        textureArray[i].wrapS = textureArray[i].wrapT = THREE.RepeatWrapping\n        textureArray[i].repeat.set(7, 7)\n    }\n\n    return (\n        <mesh \n        {...props}\n        receiveShadow={true}\n        ref={mesh}>\n        <planeGeometry\n            args={[20000, 20000]} />\n        <meshStandardMaterial\n            map={mapColor}\n            aoMap={mapAO} \n            metalnessMap={mapReflect}\n            bumpMap={mapBump}\n            roughness={.1} />\n        </mesh>\n    )\n}\n\nconst Wall = (props) => {\n    const wallmesh = useRef();\n    return (\n        <mesh \n        {...props}\n        ref={wallmesh}\n        receiveShadow={true}>\n        <planeGeometry\n            args={[12000, 12000]} />\n        <meshStandardMaterial\n            color={\"#e6e2d3\"}\n            roughness={.8} />\n        </mesh>\n    )\n}\n\nconst Room = () => {\n    return (\n        <group>\n            <WoodFloor className=\"floor\" position={[0 , -500, 0]} rotation-x={-Math.PI / 2}/>\n            {/* <Wall className=\"left-wall\" position={[-6000, 4000, 0]} rotation-y={Math.PI / 2} />\n            <Wall className=\"right-wall\" position={[6000, 4000, 0]} rotation-y={-Math.PI / 2} />\n            <Wall className=\"back-wall\" position={[0, 4000, -6000]} />\n            <Wall className=\"front-wall\" position={[0, 4000, 6000]} rotation-y={Math.PI} /> */}\n        </group>\n    );\n};\n\nexport default Room;","/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/components/Weatherblanket.js",[],[],"/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/components/Mote.js",["51"],[],"import { useRef } from \"react\"\nimport { useControl } from \"react-three-gui\"\n\nconst moteGroup = 'Motes'\n\nconst Mote = (props) => {\n    const mesh = useRef()\n\n    return (\n        <mesh\n            position={props.position}>\n            <sphereGeometry\n                args={[1, 1, 1]}\n            />\n            <meshStandardMaterial\n                color={\"white\"}\n                emissive={\"red\"}\n            />\n        </mesh>\n    )\n}\n\nconst RandomMote = () => {\n\n    const count = useControl('Duplicates', { group: moteGroup, type: 'number', min: 0, max: 1000, value: 0, distance: 100});\n    const arr = [];\n    for (let i = 0; i < count; i++) {\n        const positionX = 1000 * (Math.random() - .5)\n        const positionY = 1000 * (Math.random() - .5)\n        const positionZ = 1000 * (Math.random() - .5)\n        arr.push(\n            <Mote position={[positionX, positionY, positionZ]} />\n        );\n    \n    }\n    return arr; \n}\n\nexport { Mote, RandomMote };","/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/components/RecordJacket.js",[],[],"/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/components/Vinyl.js",[],[],"/Users/mitch/Desktop/My Computer/Coding Projects/three-vinyl/three-vinyl/src/data/colorscale.js",[],[],{"ruleId":"52","severity":1,"message":"53","line":6,"column":10,"nodeType":"54","messageId":"55","endLine":6,"endColumn":29},{"ruleId":"52","severity":1,"message":"56","line":6,"column":31,"nodeType":"54","messageId":"55","endLine":6,"endColumn":50},{"ruleId":"52","severity":1,"message":"57","line":6,"column":52,"nodeType":"54","messageId":"55","endLine":6,"endColumn":63},{"ruleId":"52","severity":1,"message":"58","line":8,"column":10,"nodeType":"54","messageId":"55","endLine":8,"endColumn":14},{"ruleId":"52","severity":1,"message":"59","line":8,"column":16,"nodeType":"54","messageId":"55","endLine":8,"endColumn":26},{"ruleId":"52","severity":1,"message":"60","line":35,"column":7,"nodeType":"54","messageId":"55","endLine":35,"endColumn":11},{"ruleId":"52","severity":1,"message":"61","line":7,"column":11,"nodeType":"54","messageId":"55","endLine":7,"endColumn":15},"no-unused-vars","'PointerLockControls' is defined but never used.","Identifier","unusedVar","'FirstPersonControls' is defined but never used.","'FlyControls' is defined but never used.","'Mote' is defined but never used.","'RandomMote' is defined but never used.","'Wall' is assigned a value but never used.","'mesh' is assigned a value but never used."]